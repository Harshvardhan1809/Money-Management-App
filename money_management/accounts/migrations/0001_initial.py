# Generated by Django 4.1.2 on 2022-10-11 18:11

import accounts.models
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email address"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=30, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={"verbose_name": "user", "verbose_name_plural": "users",},
            managers=[("objects", accounts.models.CustomUserManager()),],
        ),
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "profile_pic",
                    models.ImageField(
                        default="profile/default/default.jpg",
                        upload_to="profile/account/",
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        choices=[
                            ("tokyo", "東京都"),
                            ("osaka", "大阪府"),
                            ("kyoto", "京都府"),
                            ("kanagawa", "神奈川県"),
                            ("hokkaido", "北海道"),
                        ],
                        default=None,
                        max_length=150,
                        verbose_name="location",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Expenditure",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "account",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="expenditure",
                        to="accounts.account",
                        verbose_name="account",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Spending",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=7)),
                (
                    "type1",
                    models.CharField(
                        choices=[
                            ("shokuji", "食事"),
                            ("nichiyouhin", "日用品"),
                            ("shumi_goraku", "趣味・娯楽"),
                            ("koutsuuhi", "交通費"),
                            ("ishou_biyou", "衣装・美容"),
                            ("kousaihi", "交際費"),
                            ("kenkou_iryou", "健康・医療"),
                            ("kyouyou_kyouiku", "教養・教育"),
                            ("suidou_kounetsuhi", "水道・光熱費"),
                            ("sonota", "その他"),
                        ],
                        default=("sonota", "その他"),
                        max_length=150,
                        verbose_name="type1",
                    ),
                ),
                (
                    "type2",
                    models.CharField(
                        default="sonota", max_length=150, verbose_name="type2"
                    ),
                ),
                ("date", models.DateField(default=datetime.date.today)),
                (
                    "note",
                    models.TextField(
                        blank=True,
                        help_text="内容を入力",
                        max_length=100,
                        null=True,
                        verbose_name="note",
                    ),
                ),
                (
                    "expenditure",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.expenditure",
                    ),
                ),
            ],
        ),
    ]
